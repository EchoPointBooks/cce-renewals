#!/usr/bin/env python3

import argparse
from collections import defaultdict
import csv
import lxml.etree as ET
import re
import sys


PARSE_REGNUM = re.compile(r'^([^0]+)(\d+)$')

def hyphenize(c):
    """Add a hyphen to the regnum class if it ends in a digit, (e.g. B5-)."""
    return c + '-' if c[-1].isdigit() else c


def reg_regnum(r):
    m = PARSE_REGNUM.match(r)
    return '{:s}{:d}'.format(hyphenize(m[1]), int(m[2]))


def regularize_regnums(regnums, k):
    return {k: '|'.join([reg_regnum(r) for r in regnums[k].split('|')])}


def regularize(d):
    """Return a new dict with some of the fields regularized."""
    return {**d,
            **regularize_regnums(d, 'oreg')}


def format_holders(holders):
    return {'claimants': '||'.join(
        ['|'.join((h.find('Name').text, h.find('Type').text))
         for h in holders])}

def get_claimaints(d, rec):
    """Use claimants from the parsed XML"""
    return {**d,
            **format_holders(rec.findall('Holder'))}


parser = argparse.ArgumentParser(description='Read Google Renewals')
parser.add_argument('-f', '--file', metavar='XML', type=argparse.FileType('r'),
                    help='XML file to process')
parser.add_argument('-y', '--year', metavar='YEAR', help='Year to filter')
args = parser.parse_args()


tree = ET.parse(args.file)
root = tree.getroot()

fieldnames = set()
recs = []
for record in root.findall('./Record'):
    if 'web-%s' % args.year in record.find('File').text:

        fields = [f.split(':\t') for f in record.find('Snippet').text.split('\n') if f != '']

        d = defaultdict(list)
        for k, v in fields:
#            print(type(v))
            d[k.lower()].append(v)

        
        
        dd = dict([(b[0],'|'.join(b[1])) for b in d.items()])
        dd = get_claimaints(dd, record)
        recs += [regularize(dd)]
        fieldnames = fieldnames.union(dd.keys())

        
writer = csv.DictWriter(sys.stdout, fieldnames=fieldnames, delimiter='\t')
writer.writeheader()
for r in recs:
    writer.writerow(r)
